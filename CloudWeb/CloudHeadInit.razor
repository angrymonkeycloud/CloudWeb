@namespace AngryMonkey.CloudWeb
@using Microsoft.AspNetCore.Http
@using Microsoft.Extensions.Options

@inject IOptionsSnapshot<CloudWebConfig> cloudWeb
@inject CloudPage _page
@inject IHttpContextAccessor _accessor

<CloudHead CloudPage="PageConfig" />
<CloudBundles CloudPage="PageConfig" />

@code {
    // [Parameter] public required CloudPage CloudPage { get; set; }

    protected CloudPage PageConfig
    {
        get
        {
            _page ??= new(_accessor);

            CloudPage config = new(_accessor)
                {
                    // Nullable

                    Title = _page.Title,
                    Keywords = _page.Keywords ?? cloudWeb.Value.PageDefaults.Keywords,
                    Description = _page.Description ?? cloudWeb.Value.PageDefaults.Description,
                    CallingAssemblyName = _page.CallingAssemblyName ?? cloudWeb.Value.PageDefaults.CallingAssemblyName,

                    // Not Nullable

                    Favicon = _page.Favicon ?? cloudWeb.Value.PageDefaults.Favicon ?? "/favicon.ico",
                    IndexPage = _page.IndexPage ?? cloudWeb.Value.PageDefaults.IndexPage ?? true,
                    FollowPage = _page.FollowPage ?? cloudWeb.Value.PageDefaults.FollowPage ?? true,
                    AutoAppendBlazorStyles = _page.AutoAppendBlazorStyles ?? cloudWeb.Value.PageDefaults.AutoAppendBlazorStyles ?? false
                };

            config.SetTitleAddOns(_page.TitleAddOns ?? cloudWeb.Value.PageDefaults.TitleAddOns);

            config._bundles.Clear();
            config._bundles.AddRange(cloudWeb.Value.PageDefaults.Bundles);
            config._bundles.AddRange(_page.Bundles);


            config._features.Clear();
            config._features.AddRange(cloudWeb.Value.PageDefaults.Features);
            config._features.AddRange(_page.Features);

            return config;
        }
    }

    protected override void OnInitialized() => PageConfig.OnModified += () => { StateHasChanged(); };
}