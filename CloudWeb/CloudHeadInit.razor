@namespace AngryMonkey.CloudWeb

@inject CloudWebConfig cloudWeb

<CloudHead CloudPage="PageConfig" />
<CloudBundles CloudPage="PageConfig" />
<HeadOutlet />

@switch (PageConfig.BlazorRenderModeResult())
{
    case CloudPageBlazorRenderModes.Server:
        <script suppress-error="BL9992" src="/_framework/blazor.server.js" defer></script>

        <script suppress-error="BL9992" src="/js/blazor.js" defer></script>
        break;

    case CloudPageBlazorRenderModes.WebAssembly:
        <script suppress-error="BL9992" src="/_framework/blazor.webassembly.js" defer></script>
        break;

    default: break;
}

@code {
    [Parameter] public required CloudPage CloudPage { get; set; }

    protected CloudPage PageConfig
    {
        get
        {
            CloudPage config = new()
                {
                    // Nullable

                    Keywords = CloudPage.Keywords ?? cloudWeb.PageDefaults.Keywords,
                    Description = CloudPage.Description ?? cloudWeb.PageDefaults.Description,
                    TitleAddOns = CloudPage.TitleAddOns ?? cloudWeb.PageDefaults.TitleAddOns,
                    CallingAssemblyName = CloudPage.CallingAssemblyName ?? cloudWeb.PageDefaults.CallingAssemblyName,

                    // Not Nullable

                    BaseUrl = CloudPage.BaseUrl ?? cloudWeb.PageDefaults.BaseUrl ?? "/",
                    IndexPage = CloudPage.IndexPage ?? cloudWeb.PageDefaults.IndexPage ?? true,
                    FollowPage = CloudPage.FollowPage ?? cloudWeb.PageDefaults.FollowPage ?? true,
                    IsCrawler = CloudPage.IsCrawler ?? cloudWeb.PageDefaults.IsCrawler ?? false,
                    BlazorRenderMode = CloudPage.BlazorRenderMode ?? cloudWeb.PageDefaults.BlazorRenderMode ?? CloudPageBlazorRenderModes.None,
                    AutoAppendBlazorStyles = CloudPage.AutoAppendBlazorStyles ?? cloudWeb.PageDefaults.AutoAppendBlazorStyles ?? false,
                };

            config.Bundles = new(cloudWeb.PageDefaults.Bundles);
            config.Bundles.AddRange(CloudPage.Bundles);

            config.Features = new(cloudWeb.PageDefaults.Features);
            config.Features.AddRange(CloudPage.Features);

            return config;
        }
    }
}